2020-07-23 10:52:51,933 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 10:52:51,959 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 10:52:51,985 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 10:52:51,998 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 10:52:52,011 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 10:52:52,012 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 10:52:52,018 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 10:52:53,065 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 10:52:53,074 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 10:52:53,181 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 10:52:53,185 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 10:52:53,213 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-07-23 10:52:53,431 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=963a2f37-c6f6-3f49-8d69-ad7d83c6f344
2020-07-23 10:52:53,536 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 10:52:54,075 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 10:52:54,085 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 10:52:54,086 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 10:52:54,086 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 10:52:54,229 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 10:52:54,229 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2188 ms
2020-07-23 10:52:54,316 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 10:52:54,406 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 10:52:55,310 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 10:52:55,311 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 10:52:55,315 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 10:52:55,315 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 10:52:55,501 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 10:52:56,114 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 10:52:56,119 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 10:52:56,120 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 10:52:56,120 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 10:52:56,451 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 10:52:57,168 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 10:52:57,191 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 10:52:57,194 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 10:52:57,217 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 10:52:57,228 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 10:52:57,683 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 10:52:57,696 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 10:52:57,727 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 10:52:57,750 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 8.208 seconds (JVM running for 9.872)
2020-07-23 10:52:57,753 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:52:57,754 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:52:57,756 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:52:57,756 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:52:57,756 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:52:57,756 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:52:57,775 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:53:27,473 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:53:56,984 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:54:26,490 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:54:55,997 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:55:25,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:55:55,013 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:56:15,261 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 10:56:15,261 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 10:56:15,271 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 9 ms
2020-07-23 10:56:24,526 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:56:26,538 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:56:26,629 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 10:56:26,662 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 10:56:26,765 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 10:56:26,783 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 10:56:26,841 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:56:26,850 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5c8df8bd
2020-07-23 10:56:27,677 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:57:19,652 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:57:19,657 [com.alibaba.nacos.naming.beat.sender] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","weight":1.0}
2020-07-23 10:57:49,159 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:58:42,297 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 10:58:42,378 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 10:58:42,448 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 10:58:42,473 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 10:58:42,495 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 10:58:42,496 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 10:58:42,503 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 10:58:44,080 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 10:58:44,092 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 10:58:44,245 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 10:58:44,248 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 10:58:44,280 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-07-23 10:58:44,551 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=963a2f37-c6f6-3f49-8d69-ad7d83c6f344
2020-07-23 10:58:44,653 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 10:58:45,464 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 10:58:45,478 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 10:58:45,479 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 10:58:45,479 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 10:58:45,688 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 10:58:45,689 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3140 ms
2020-07-23 10:58:45,813 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 10:58:45,947 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 10:58:46,925 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 10:58:46,925 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 10:58:46,931 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 10:58:46,931 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 10:58:47,191 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 10:58:47,935 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 10:58:47,941 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 10:58:47,942 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 10:58:47,943 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 10:58:48,422 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 10:59:07,004 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 10:59:07,027 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 10:59:07,030 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 10:59:07,052 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 10:59:07,061 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 10:59:07,424 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 10:59:07,438 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 10:59:07,468 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 10:59:07,489 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 29.575 seconds (JVM running for 31.596)
2020-07-23 10:59:07,493 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:59:07,494 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:59:07,495 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:59:07,495 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:59:07,495 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 10:59:07,495 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 10:59:07,501 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 10:59:08,788 [http-nio-4001-exec-2] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 10:59:08,789 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 10:59:08,797 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 10:59:12,495 [http-nio-4001-exec-2] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:59:12,508 [http-nio-4001-exec-2] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 10:59:12,513 [http-nio-4001-exec-2] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 10:59:12,531 [http-nio-4001-exec-2] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 10:59:12,536 [http-nio-4001-exec-2] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 10:59:12,545 [http-nio-4001-exec-2] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:59:12,546 [http-nio-4001-exec-2] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@3ebbcaf3
2020-07-23 10:59:13,517 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 10:59:37,201 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:00:06,708 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:00:36,218 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:00:45,295 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:00:45,318 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:00:45,343 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:00:45,353 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:00:45,364 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:00:45,365 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:00:45,369 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:00:46,234 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:00:46,240 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:00:46,330 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:00:46,333 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:00:46,357 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-07-23 11:00:46,537 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=963a2f37-c6f6-3f49-8d69-ad7d83c6f344
2020-07-23 11:00:46,613 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:00:47,105 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:00:47,116 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:00:47,117 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:00:47,117 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:00:47,254 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:00:47,255 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1862 ms
2020-07-23 11:00:47,345 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:00:47,428 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:00:48,182 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:00:48,183 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:00:48,187 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:00:48,187 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:00:48,387 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:00:49,061 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:00:49,066 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:00:49,067 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:00:49,067 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:00:49,410 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:00:56,504 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:00:56,544 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:00:56,547 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:00:56,570 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:00:56,579 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:00:57,000 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:00:57,013 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:00:57,044 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:00:57,066 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 13.431 seconds (JVM running for 14.609)
2020-07-23 11:00:57,070 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:00:57,070 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:00:57,071 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:00:57,072 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:00:57,072 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:00:57,072 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:00:57,085 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:01:12,802 [http-nio-4001-exec-2] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:01:12,803 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:01:12,811 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 11:01:15,309 [http-nio-4001-exec-2] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:01:15,320 [http-nio-4001-exec-2] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:01:15,325 [http-nio-4001-exec-2] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:01:15,343 [http-nio-4001-exec-2] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:01:15,348 [http-nio-4001-exec-2] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:01:15,356 [http-nio-4001-exec-2] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:01:15,358 [http-nio-4001-exec-2] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@7a130db5
2020-07-23 11:01:16,330 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:01:26,783 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:01:56,304 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:02:25,809 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:02:55,314 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:03:25,997 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:03:26,030 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:03:26,056 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:03:26,067 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:03:26,078 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:03:26,079 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:03:26,083 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:03:27,249 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:03:27,258 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:03:27,409 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:03:27,412 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:03:27,446 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-07-23 11:03:27,729 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=963a2f37-c6f6-3f49-8d69-ad7d83c6f344
2020-07-23 11:03:27,842 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:03:28,751 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:03:28,772 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:03:28,774 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:03:28,774 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:03:29,004 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:03:29,004 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2900 ms
2020-07-23 11:03:29,116 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:03:29,214 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:03:31,812 [main] INFO  [c.hax.common.web.config.CommonWebAutoConfiguration] CommonWebAutoConfiguration.java:67 - 全局拦截器注册完成]
2020-07-23 11:03:31,903 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:03:31,903 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:03:31,908 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:03:31,908 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:03:32,089 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:03:32,605 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:03:32,609 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:03:32,609 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:03:32,610 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:03:32,973 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:03:33,802 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:03:33,854 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:03:33,858 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:03:33,890 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:03:33,901 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:03:34,444 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:03:34,458 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:03:34,494 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:03:34,518 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 10.631 seconds (JVM running for 11.732)
2020-07-23 11:03:34,522 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:03:34,523 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:03:34,524 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:03:34,524 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:03:34,525 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:03:34,525 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:03:34,537 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:04:04,234 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:04:33,739 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:04:54,088 [http-nio-4001-exec-2] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:04:54,089 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:04:54,098 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 9 ms
2020-07-23 11:05:03,245 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:05:32,749 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:05:44,562 [http-nio-4001-exec-4] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:05:44,574 [http-nio-4001-exec-4] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:05:44,579 [http-nio-4001-exec-4] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:05:44,597 [http-nio-4001-exec-4] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:05:44,602 [http-nio-4001-exec-4] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:05:44,610 [http-nio-4001-exec-4] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:05:44,612 [http-nio-4001-exec-4] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@14fa7d63
2020-07-23 11:05:45,583 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:06:02,253 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:06:31,758 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:07:01,268 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:07:30,776 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:08:07,363 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:08:07,406 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:08:07,442 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:08:07,456 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:08:07,467 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:08:07,468 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:08:07,474 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:08:08,723 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:08:08,734 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:08:08,879 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:08:08,883 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:08:08,917 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020-07-23 11:08:09,230 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=963a2f37-c6f6-3f49-8d69-ad7d83c6f344
2020-07-23 11:08:09,334 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:08:10,121 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:08:10,136 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:08:10,137 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:08:10,138 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:08:10,361 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:08:10,361 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2859 ms
2020-07-23 11:08:10,478 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:08:10,583 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:08:11,517 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:08:11,517 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:08:11,522 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:08:11,523 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:08:11,739 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:08:12,547 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:08:12,554 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:08:12,555 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:08:12,556 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:08:12,959 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:08:13,849 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:08:13,881 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:08:13,885 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:08:13,914 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:08:13,924 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:08:14,438 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:08:14,452 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:08:14,489 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:08:14,514 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 10.462 seconds (JVM running for 12.285)
2020-07-23 11:08:14,518 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:08:14,519 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:08:14,521 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:08:14,521 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:08:14,522 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:08:14,522 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:08:14,545 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:08:17,709 [http-nio-4001-exec-3] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:08:17,710 [http-nio-4001-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:08:17,718 [http-nio-4001-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 11:08:22,310 [http-nio-4001-exec-3] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:08:22,324 [http-nio-4001-exec-3] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:08:22,329 [http-nio-4001-exec-3] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:08:22,346 [http-nio-4001-exec-3] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:08:22,350 [http-nio-4001-exec-3] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:08:22,360 [http-nio-4001-exec-3] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:08:22,362 [http-nio-4001-exec-3] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@3b06ec14
2020-07-23 11:08:23,333 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:12:52,591 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:12:52,594 [com.alibaba.nacos.naming.beat.sender] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","weight":1.0}
2020-07-23 11:14:35,306 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:14:35,335 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:14:35,357 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:14:35,366 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:14:35,383 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:14:35,384 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:14:35,388 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:14:36,315 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:14:36,323 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:14:36,430 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:14:36,433 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:14:36,459 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-07-23 11:14:36,661 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=5333f779-7ecf-354b-88ad-477f6e7d48ca
2020-07-23 11:14:36,736 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:14:37,306 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:14:37,316 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:14:37,317 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:14:37,317 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:14:37,472 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:14:37,473 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2066 ms
2020-07-23 11:14:37,569 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:14:37,657 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:14:38,407 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:14:38,407 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:14:38,411 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:14:38,411 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:14:38,594 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:14:39,206 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:14:39,210 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:14:39,211 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:14:39,211 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:14:39,553 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:14:40,329 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:14:40,370 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:14:40,372 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:14:40,395 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:14:40,403 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:14:40,875 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:14:40,888 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:14:40,920 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:14:40,943 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 7.737 seconds (JVM running for 8.741)
2020-07-23 11:14:40,947 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:14:40,948 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:14:40,949 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:14:40,949 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:14:40,950 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:14:40,950 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:14:40,957 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:14:45,272 [http-nio-4001-exec-4] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:14:45,272 [http-nio-4001-exec-4] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:14:45,280 [http-nio-4001-exec-4] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 11:14:46,010 [http-nio-4001-exec-4] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:14:46,021 [http-nio-4001-exec-4] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:14:46,026 [http-nio-4001-exec-4] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:14:46,044 [http-nio-4001-exec-4] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:14:46,049 [http-nio-4001-exec-4] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:14:46,057 [http-nio-4001-exec-4] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:14:46,059 [http-nio-4001-exec-4] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@3b7416f7
2020-07-23 11:14:47,030 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:14:56,115 [http-nio-4001-exec-4] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:125 - [defaultExceptionHandler]
feign.RetryableException: Read timed out executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:15:10,666 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:15:51,138 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:16:16,587 [http-nio-4001-exec-3] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:125 - [defaultExceptionHandler]
feign.RetryableException: Read timed out executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:16:20,651 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:16:50,165 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:17:19,681 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:17:49,187 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:18:18,691 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:18:48,195 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:19:17,700 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:19:47,203 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:20:16,714 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:20:41,358 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:20:41,421 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:20:41,486 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:20:41,508 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:20:41,527 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:20:41,528 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:20:41,538 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:20:42,995 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:20:43,006 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:20:43,154 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:20:43,157 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:20:43,190 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-07-23 11:20:43,465 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=5333f779-7ecf-354b-88ad-477f6e7d48ca
2020-07-23 11:20:43,574 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:20:44,407 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:20:44,425 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:20:44,426 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:20:44,426 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:20:44,690 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:20:44,691 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3111 ms
2020-07-23 11:20:44,819 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:20:44,942 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:20:46,078 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:20:46,079 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:20:46,085 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:20:46,086 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:20:46,355 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:20:47,235 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:20:47,242 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:20:47,244 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:20:47,244 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:20:47,768 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:20:48,990 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:20:49,029 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:20:49,033 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:20:49,074 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:20:49,089 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:20:49,755 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:20:49,772 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:20:49,816 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:20:49,847 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 13.767 seconds (JVM running for 16.185)
2020-07-23 11:20:49,851 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:20:49,852 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:20:49,853 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:20:49,854 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:20:49,856 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:20:49,856 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:20:49,860 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:20:49,872 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:21:19,565 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:21:49,077 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:22:18,582 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:22:44,620 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:22:44,621 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:22:44,630 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 9 ms
2020-07-23 11:22:49,825 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:22:52,493 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:22:52,591 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:22:52,622 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:22:52,712 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:22:52,729 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:22:52,781 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:22:52,792 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@4e8e923f
2020-07-23 11:22:53,635 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:23:11,892 [http-nio-4001-exec-1] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Read timed out executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:23:19,331 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:24:09,402 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:24:09,428 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:24:09,456 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:24:09,466 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:24:09,476 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:24:09,477 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:24:09,482 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:24:10,623 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:24:10,633 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:24:10,778 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:24:10,782 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:24:10,815 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-07-23 11:24:11,089 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=5333f779-7ecf-354b-88ad-477f6e7d48ca
2020-07-23 11:24:11,192 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:24:11,764 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:24:11,775 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:24:11,776 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:24:11,776 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:24:11,953 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:24:11,953 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2451 ms
2020-07-23 11:24:12,047 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:24:12,147 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:24:12,874 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:24:12,875 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:24:12,879 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:24:12,879 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:24:13,060 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:24:13,671 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:24:13,675 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:24:13,677 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:24:13,678 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:24:14,077 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:24:14,869 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:24:14,921 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:24:14,924 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:24:14,953 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:24:14,962 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:24:15,472 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:24:15,486 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:24:15,521 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:24:15,547 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 8.563 seconds (JVM running for 10.348)
2020-07-23 11:24:15,551 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:24:15,552 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:24:15,553 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:24:15,553 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:24:15,554 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:24:15,554 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:24:15,567 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:24:45,274 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:25:14,782 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:25:44,295 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:26:13,808 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:26:43,318 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:27:05,633 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:27:05,633 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:27:05,645 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 12 ms
2020-07-23 11:27:06,375 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:27:06,388 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:27:06,393 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:27:06,410 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:27:06,416 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:27:06,425 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:27:06,426 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@2bb402a0
2020-07-23 11:27:07,397 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:27:12,823 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:27:27,071 [http-nio-4001-exec-5] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Read timed out executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:27:42,328 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:28:11,834 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:28:33,533 [http-nio-4001-exec-6] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Connection refused: connect executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:28:41,464 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] PushReceiver.java:76 - received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.17.197.177\",\"port\":4000,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"ephemeral\":true}],\"dom\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"name\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"cacheMillis\":10000,\"lastRefTime\":1595474920179,\"checksum\":\"3f5ed6116acafa12516f60ad1d01fbba\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":526066006199799} from /172.17.197.177
2020-07-23 11:28:41,464 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:28:45,156 [http-nio-4001-exec-9] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Connection refused: connect executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:28:55,185 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] PushReceiver.java:76 - received push data: {"type":"dom","data":"{\"dom\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"hosts\":[],\"name\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"cacheMillis\":10000,\"lastRefTime\":1595474935185,\"checksum\":\"7affc18bffd0150168c0f3585e42f88b\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":526081013073900} from /172.17.197.177
2020-07-23 11:28:55,186 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:170 - removed ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:28:55,187 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(0) service: DEFAULT_GROUP@@hax-system-demo-biz -> []
2020-07-23 11:29:06,017 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:29:06,040 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:29:06,073 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:29:06,085 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:29:06,095 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:29:06,095 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:29:06,099 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:29:07,169 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:29:07,178 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:29:07,305 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:29:07,308 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:29:07,344 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020-07-23 11:29:07,607 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=5333f779-7ecf-354b-88ad-477f6e7d48ca
2020-07-23 11:29:07,710 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:29:08,377 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:29:08,389 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:29:08,390 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:29:08,391 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:29:08,569 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:29:08,569 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2445 ms
2020-07-23 11:29:08,696 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:29:08,804 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:29:09,728 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:29:09,729 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:29:09,734 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:29:09,734 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:29:09,958 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:29:10,705 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:29:10,711 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:29:10,712 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:29:10,713 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:29:11,132 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:29:12,077 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:29:12,105 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:29:12,108 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:29:12,134 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:29:12,145 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:29:12,719 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:29:12,738 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:29:12,801 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:29:12,834 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 8.701 seconds (JVM running for 9.869)
2020-07-23 11:29:12,839 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:29:12,840 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:29:12,842 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:29:12,842 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:29:12,842 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:29:12,843 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:29:12,849 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:29:33,444 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:29:33,445 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:29:33,456 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 11 ms
2020-07-23 11:29:41,697 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:29:41,820 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:29:41,867 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:29:41,974 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@3f97de35
2020-07-23 11:29:43,249 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:29:43,253 [http-nio-4001-exec-1] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 59 common frames omitted
2020-07-23 11:30:12,763 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:30:42,274 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:31:03,299 [com.alibaba.nacos.client.naming.updater] WARN  [com.alibaba.nacos.client.naming] HostReactor.java:113 - out of date data received, old-t: 1595475053290, new-t: 0
2020-07-23 11:31:11,782 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:31:41,295 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:32:10,798 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:32:40,301 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:33:09,806 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:33:39,309 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:34:08,814 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:34:38,317 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:35:07,831 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:35:37,335 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:36:06,838 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:36:36,341 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:37:05,846 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:37:35,349 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:38:04,854 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:39:21,290 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:39:21,313 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:39:21,337 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:39:21,346 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:39:21,356 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:39:21,357 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:39:21,361 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:39:22,335 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:39:22,343 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:39:22,446 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:39:22,449 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:39:22,476 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-07-23 11:39:22,691 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 11:39:22,771 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:39:23,330 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:39:23,342 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:39:23,343 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:39:23,343 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:39:23,493 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:39:23,494 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2115 ms
2020-07-23 11:39:23,587 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:39:23,680 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:39:24,414 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:39:24,414 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:39:24,418 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:39:24,419 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:39:24,617 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:39:25,239 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:39:25,244 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:39:25,244 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:39:25,245 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:39:25,623 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:39:26,427 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:39:26,451 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:39:26,455 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:39:26,478 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:39:26,487 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:39:26,963 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:39:26,977 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:39:27,010 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:39:27,033 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 8.581 seconds (JVM running for 9.964)
2020-07-23 11:39:27,037 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:39:27,038 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:39:27,040 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:39:27,040 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:39:27,040 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:39:27,040 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:39:27,047 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:39:33,746 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:39:33,747 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:39:33,755 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 11:39:36,376 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:39:36,391 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:39:36,397 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:39:36,418 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:164 - new ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:39:36,424 [http-nio-4001-exec-1] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:39:36,435 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:39:36,436 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[172.17.197.177:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.17.197.177:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@296fe7dd
2020-07-23 11:39:37,400 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:39:45,111 [http-nio-4001-exec-3] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Connection refused: connect executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:371)
	at sun.net.www.protocol.http.HttpURLConnection.setNewClient(HttpURLConnection.java:775)
	at sun.net.www.protocol.http.HttpURLConnection.setNewClient(HttpURLConnection.java:763)
	at sun.net.www.protocol.http.HttpURLConnection.writeRequests(HttpURLConnection.java:705)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1585)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:39:47,546 [http-nio-4001-exec-4] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Connection refused: connect executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:39:49,174 [http-nio-4001-exec-5] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
feign.RetryableException: Connection refused: connect executing GET http://hax-system-demo-biz/sys/user/list
	at feign.FeignException.errorExecuting(FeignException.java:249)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:129)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:93)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:56)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	... 58 common frames omitted
2020-07-23 11:39:56,747 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:39:59,708 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] PushReceiver.java:76 - received push data: {"type":"dom","data":"{\"hosts\":[{\"ip\":\"172.17.197.177\",\"port\":4000,\"valid\":true,\"healthy\":true,\"marked\":false,\"instanceId\":\"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz\",\"metadata\":{\"preserved.register.source\":\"SPRING_CLOUD\"},\"enabled\":true,\"weight\":1.0,\"clusterName\":\"DEFAULT\",\"serviceName\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"ephemeral\":true}],\"dom\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"name\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"cacheMillis\":10000,\"lastRefTime\":1595475599707,\"checksum\":\"eb9d94f610eea628cbfea8e4d34a7bf7\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":526745534811100} from /172.17.197.177
2020-07-23 11:40:14,716 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] PushReceiver.java:76 - received push data: {"type":"dom","data":"{\"dom\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"hosts\":[],\"name\":\"DEFAULT_GROUP@@hax-system-demo-biz\",\"cacheMillis\":10000,\"lastRefTime\":1595475614715,\"checksum\":\"7affc18bffd0150168c0f3585e42f88b\",\"useSpecifiedURL\":false,\"clusters\":\"\",\"env\":\"\",\"metadata\":{}}","lastRefTime":526760543656500} from /172.17.197.177
2020-07-23 11:40:14,716 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:170 - removed ips(1) service: DEFAULT_GROUP@@hax-system-demo-biz -> [{"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceId":"172.17.197.177#4000#DEFAULT#DEFAULT_GROUP@@hax-system-demo-biz","ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4000,"serviceName":"DEFAULT_GROUP@@hax-system-demo-biz","weight":1.0}]
2020-07-23 11:40:14,718 [com.alibaba.nacos.naming.push.receiver] INFO  [com.alibaba.nacos.client.naming] HostReactor.java:200 - current ips:(0) service: DEFAULT_GROUP@@hax-system-demo-biz -> []
2020-07-23 11:40:26,251 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:41:22,420 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:41:22,442 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:41:22,464 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:41:22,473 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:41:22,483 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:41:22,484 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:41:22,489 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:41:23,382 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:41:23,388 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:41:23,475 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:41:23,477 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:41:23,501 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-07-23 11:41:23,687 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 11:41:23,751 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:41:24,217 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:41:24,226 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:41:24,227 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:41:24,227 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:41:24,365 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:41:24,365 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1858 ms
2020-07-23 11:41:24,444 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:41:24,519 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:41:25,190 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:41:25,191 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:41:25,194 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:41:25,195 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:41:25,363 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:41:25,870 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:41:25,874 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:41:25,874 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:41:25,875 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:41:26,194 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:41:26,876 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:41:26,900 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:41:26,903 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:41:26,925 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:41:26,934 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:41:27,340 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:41:27,352 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:41:27,382 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:41:27,403 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 6.672 seconds (JVM running for 7.743)
2020-07-23 11:41:27,407 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:41:27,408 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:41:27,409 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:41:27,409 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:41:27,409 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:41:27,409 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:41:27,419 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:41:32,216 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:41:32,217 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:41:32,222 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 5 ms
2020-07-23 11:41:33,090 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:41:33,102 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:41:33,107 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:41:33,123 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@6ff9f294
2020-07-23 11:41:35,288 [hystrix-hax-system-demo-biz-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:22 - feign 查询管理员用户列表失败
2020-07-23 11:41:35,306 [http-nio-4001-exec-1] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
com.netflix.hystrix.exception.HystrixRuntimeException: RemoteSysUserService#info(String) failed and fallback failed.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:832)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.onError(OperatorSubscribeOn.java:80)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 28 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:41:46,610 [hystrix-hax-system-demo-biz-2] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:22 - feign 查询管理员用户列表失败
2020-07-23 11:41:57,597 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:41:57,600 [http-nio-4001-exec-3] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
com.netflix.hystrix.exception.HystrixRuntimeException: RemoteSysUserService#info(String) failed and fallback failed.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:832)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.onError(OperatorSubscribeOn.java:80)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 28 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:42:28,505 [hystrix-hax-system-demo-biz-3] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:22 - feign 查询管理员用户列表失败
2020-07-23 11:42:28,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:42:28,876 [http-nio-4001-exec-5] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
com.netflix.hystrix.exception.HystrixRuntimeException: RemoteSysUserService#info(String) failed and fallback failed.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:832)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.onError(OperatorSubscribeOn.java:80)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 28 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:42:38,882 [com.alibaba.nacos.client.naming.updater] WARN  [com.alibaba.nacos.client.naming] HostReactor.java:113 - out of date data received, old-t: 1595475748874, new-t: 0
2020-07-23 11:42:46,763 [hystrix-hax-system-demo-biz-4] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:22 - feign 查询管理员用户列表失败
2020-07-23 11:43:06,704 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:43:06,706 [http-nio-4001-exec-4] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
com.netflix.hystrix.exception.HystrixRuntimeException: RemoteSysUserService#info(String) failed and fallback failed.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:832)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.onError(OperatorSubscribeOn.java:80)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 28 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:43:36,216 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:44:05,722 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:44:35,229 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:45:04,734 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:46:46,291 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:46:46,320 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:46:46,348 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:46:46,359 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:46:46,368 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:46:46,369 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:46:46,374 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:46:47,363 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:46:47,370 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:46:47,467 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:46:47,470 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:46:47,495 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-07-23 11:46:47,691 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=5333f779-7ecf-354b-88ad-477f6e7d48ca
2020-07-23 11:46:47,770 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:46:48,343 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:46:48,354 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:46:48,355 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:46:48,355 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:46:48,508 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:46:48,508 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2111 ms
2020-07-23 11:46:48,598 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:46:48,680 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:46:49,418 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:46:49,419 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:46:49,423 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:46:49,423 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:46:49,613 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:46:50,219 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:46:50,223 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:46:50,224 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:46:50,224 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:46:50,581 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:46:51,355 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:46:51,380 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:46:51,383 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:46:51,408 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:46:51,417 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:46:51,919 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:46:51,940 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:46:51,996 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:46:52,025 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 7.599 seconds (JVM running for 8.722)
2020-07-23 11:46:52,030 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:46:52,031 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:46:52,033 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:46:52,033 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:46:52,034 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:46:52,035 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:46:52,040 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:46:57,063 [http-nio-4001-exec-2] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:46:57,063 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:46:57,070 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 6 ms
2020-07-23 11:46:58,007 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:46:58,026 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:46:58,032 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:46:58,051 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@4cc253ef
2020-07-23 11:47:05,534 [hystrix-hax-system-demo-biz-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackImpl] RemoteSysUserServiceFallbackImpl.java:31 - feign 查询管理员用户列表失败
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:47:18,962 [hystrix-hax-system-demo-biz-2] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackImpl] RemoteSysUserServiceFallbackImpl.java:31 - feign 查询管理员用户列表失败
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:47:21,738 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:47:50,126 [com.alibaba.nacos.client.naming.updater] WARN  [com.alibaba.nacos.client.naming] HttpClient.java:94 - failed to request http://localhost:8848/nacos/v1/ns/instance/list?app=unknown&healthyOnly=false&namespaceId=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45&clientIP=172.17.197.177&serviceName=DEFAULT_GROUP%40%40hax-system-demo-biz&udpPort=49345&encoding=UTF-8 from 127.0.0.1
2020-07-23 11:47:50,126 [com.alibaba.nacos.client.naming.updater] ERROR [com.alibaba.nacos.client.naming] HttpClient.java:102 - [NA] failed to request 
java.net.SocketTimeoutException: null
	at java.net.SocksSocketImpl.remainingMillis(SocksSocketImpl.java:111)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at com.alibaba.nacos.client.naming.net.HttpClient.request(HttpClient.java:86)
	at com.alibaba.nacos.client.naming.net.NamingProxy.callServer(NamingProxy.java:433)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqAPI(NamingProxy.java:468)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqAPI(NamingProxy.java:401)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqAPI(NamingProxy.java:397)
	at com.alibaba.nacos.client.naming.net.NamingProxy.queryList(NamingProxy.java:321)
	at com.alibaba.nacos.client.naming.core.HostReactor.updateServiceNow(HostReactor.java:281)
	at com.alibaba.nacos.client.naming.core.HostReactor$UpdateTask.run(HostReactor.java:327)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-07-23 11:47:52,917 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:48:00,034 [hystrix-hax-system-demo-biz-3] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackImpl] RemoteSysUserServiceFallbackImpl.java:31 - feign 查询管理员用户列表失败
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 34 common frames omitted
2020-07-23 11:48:29,538 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:48:59,044 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:53:18,305 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:53:18,327 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:53:18,358 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:53:18,367 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:53:18,376 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:53:18,377 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:53:18,380 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:53:19,382 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:53:19,390 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:53:19,511 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:53:19,515 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:53:19,549 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020-07-23 11:53:19,785 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 11:53:19,862 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:53:20,449 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:53:20,460 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:53:20,461 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:53:20,461 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:53:20,624 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:53:20,624 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2225 ms
2020-07-23 11:53:20,719 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:53:20,827 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:53:21,620 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:53:21,620 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:53:21,624 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:53:21,624 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:53:21,820 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:53:22,427 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:53:22,432 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:53:22,432 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:53:22,433 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:53:22,782 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:53:23,530 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:53:23,557 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:53:23,559 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:53:23,582 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:53:23,592 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:53:24,083 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:53:24,100 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:53:24,139 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:53:24,167 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 7.652 seconds (JVM running for 9.01)
2020-07-23 11:53:24,172 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:53:24,173 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:53:24,175 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:53:24,175 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:53:24,175 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:53:24,175 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:53:24,187 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:53:28,973 [http-nio-4001-exec-2] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:53:28,973 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:53:28,979 [http-nio-4001-exec-2] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 6 ms
2020-07-23 11:53:29,992 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:53:30,004 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:53:30,009 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:53:30,026 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@671b71ae
2020-07-23 11:53:30,054 [hystrix-hax-system-demo-biz-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:53:39,358 [hystrix-hax-system-demo-biz-2] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:53:55,414 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:53:55,414 [hystrix-hax-system-demo-biz-3] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:54:25,569 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:54:44,974 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:54:44,999 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:54:45,024 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:54:45,033 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:54:45,041 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:54:45,042 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:54:45,046 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:54:45,971 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:54:45,978 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:54:46,079 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:54:46,081 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:54:46,106 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-07-23 11:54:46,313 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 11:54:46,390 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:54:46,950 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:54:46,961 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:54:46,962 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:54:46,962 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:54:47,118 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:54:47,119 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2052 ms
2020-07-23 11:54:47,211 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:54:47,296 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:54:48,030 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:54:48,031 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:54:48,035 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:54:48,035 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:54:48,221 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:54:48,797 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:54:48,801 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:54:48,802 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:54:48,802 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:54:49,153 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:54:49,938 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:54:49,961 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:54:49,964 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:54:49,988 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:54:49,996 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:54:50,467 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:54:50,481 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:54:50,514 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:54:50,536 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 7.66 seconds (JVM running for 8.851)
2020-07-23 11:54:50,540 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:54:50,541 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:54:50,543 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:54:50,543 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:54:50,544 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:54:50,544 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:54:50,546 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:54:50,547 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:54:52,993 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:54:52,993 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:54:53,000 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 7 ms
2020-07-23 11:54:53,867 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:54:53,880 [hystrix-hax-system-demo-biz-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:54:53,886 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:54:53,901 [hystrix-hax-system-demo-biz-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@531acac1
2020-07-23 11:54:57,464 [hystrix-hax-system-demo-biz-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:55:20,249 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:55:49,754 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:56:19,266 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:56:48,778 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:57:18,283 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:57:52,677 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 11:57:52,704 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 11:57:52,732 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 11:57:52,744 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 11:57:52,754 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 11:57:52,755 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 11:57:52,759 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 11:57:53,705 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:57:53,712 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 11:57:53,807 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 11:57:53,809 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 11:57:53,834 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-07-23 11:57:54,038 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 11:57:54,109 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 11:57:54,645 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 11:57:54,656 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 11:57:54,657 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 11:57:54,657 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 11:57:54,801 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 11:57:54,801 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2021 ms
2020-07-23 11:57:54,889 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 11:57:54,973 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 11:57:55,706 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:57:55,706 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:57:55,711 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 11:57:55,711 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 11:57:55,896 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 11:57:56,495 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 11:57:56,499 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 11:57:56,500 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 11:57:56,500 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 11:57:56,843 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 11:57:57,613 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 11:57:57,637 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 11:57:57,640 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 11:57:57,663 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 11:57:57,672 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 11:57:58,144 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 11:57:58,157 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 11:57:58,191 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 11:57:58,215 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 8.655 seconds (JVM running for 11.507)
2020-07-23 11:57:58,218 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:57:58,219 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:57:58,221 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:57:58,221 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:57:58,221 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 11:57:58,221 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 11:57:58,226 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:58:02,206 [http-nio-4001-exec-3] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 11:58:02,206 [http-nio-4001-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 11:58:02,214 [http-nio-4001-exec-3] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 8 ms
2020-07-23 11:58:03,073 [http-nio-4001-exec-3] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 11:58:03,086 [http-nio-4001-exec-3] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 11:58:03,091 [http-nio-4001-exec-3] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 11:58:03,111 [http-nio-4001-exec-3] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@61509616
2020-07-23 11:58:17,976 [http-nio-4001-exec-3] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:58:27,936 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:58:57,441 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:58:57,620 [http-nio-4001-exec-5] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:21 - feign 查询管理员用户列表失败
2020-07-23 11:59:26,944 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 11:59:56,448 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:00:25,959 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:00:55,462 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:01:22,678 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 12:01:22,706 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 12:01:22,734 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 12:01:22,747 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 12:01:22,756 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 12:01:22,757 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 12:01:22,762 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 12:01:23,870 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:01:23,881 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:01:24,084 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 12:01:24,090 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 12:01:24,144 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020-07-23 12:01:24,578 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 12:01:24,728 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 12:01:25,799 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 12:01:25,812 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 12:01:25,813 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 12:01:25,813 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 12:01:25,986 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 12:01:25,986 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3201 ms
2020-07-23 12:01:26,084 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 12:01:26,176 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 12:01:26,922 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:01:26,923 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:01:26,928 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:01:26,928 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:01:27,107 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 12:01:27,715 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 12:01:27,719 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 12:01:27,719 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 12:01:27,720 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 12:01:28,056 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 12:01:28,822 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 12:01:28,847 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 12:01:28,850 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 12:01:28,873 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 12:01:28,882 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 12:01:29,391 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 12:01:29,405 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 12:01:29,438 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 12:01:29,461 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 10.101 seconds (JVM running for 13.098)
2020-07-23 12:01:29,465 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:01:29,466 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:01:29,467 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:01:29,467 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:01:29,467 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:01:29,468 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:01:29,478 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:01:33,566 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 12:01:33,567 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 12:01:33,574 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 7 ms
2020-07-23 12:01:34,696 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 12:01:34,711 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 12:01:34,717 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 12:01:34,744 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@57ba5638
2020-07-23 12:01:34,779 [http-nio-4001-exec-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:23 - feign 查询管理员用户列表失败
2020-07-23 12:01:59,176 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:02:27,014 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 12:02:27,039 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 12:02:27,064 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 12:02:27,075 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 12:02:27,084 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 12:02:27,085 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 12:02:27,089 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 12:02:28,067 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:02:28,074 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:02:28,184 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 12:02:28,187 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 12:02:28,215 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-07-23 12:02:28,434 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 12:02:28,515 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 12:02:29,113 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 12:02:29,125 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 12:02:29,125 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 12:02:29,126 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 12:02:29,281 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 12:02:29,281 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2170 ms
2020-07-23 12:02:29,377 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 12:02:29,502 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 12:02:30,268 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:02:30,269 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:02:30,273 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:02:30,274 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:02:30,468 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 12:02:31,075 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 12:02:31,080 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 12:02:31,081 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 12:02:31,081 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 12:02:31,419 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 12:02:32,239 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 12:02:32,265 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 12:02:32,268 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 12:02:32,294 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 12:02:32,312 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 12:02:32,833 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 12:02:32,848 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 12:02:32,888 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 12:02:32,916 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 7.995 seconds (JVM running for 13.363)
2020-07-23 12:02:32,920 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:02:32,921 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:02:32,923 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:02:32,923 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:02:32,923 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:02:32,924 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:02:32,943 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:02:37,807 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 12:02:37,807 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 12:02:37,817 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 10 ms
2020-07-23 12:02:39,017 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 12:02:39,034 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 12:02:39,040 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 12:02:39,070 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@9a116fe
2020-07-23 12:02:39,107 [http-nio-4001-exec-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:23 - feign 查询管理员用户列表失败
2020-07-23 12:02:43,247 [http-nio-4001-exec-1] ERROR [c.h.c.web.handler.GlobalExceptionHandlerResolver] GlobalExceptionHandlerResolver.java:131 - [defaultExceptionHandler]
com.netflix.hystrix.exception.HystrixRuntimeException: RemoteSysUserService#info(String) failed and fallback failed.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:832)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at feign.hystrix.HystrixInvocationHandler.invoke(HystrixInvocationHandler.java:170)
	at com.sun.proxy.$Proxy115.info(Unknown Source)
	at com.hax.user.demo.controller.UserController.list(UserController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:109)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 113 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 119 common frames omitted
2020-07-23 12:03:08,680 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 12:03:08,721 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 12:03:08,767 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 12:03:08,781 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 12:03:08,792 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 12:03:08,793 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 12:03:08,798 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 12:03:09,968 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:03:09,976 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:03:10,102 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 12:03:10,106 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 12:03:10,141 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020-07-23 12:03:10,549 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 12:03:11,065 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 12:03:12,628 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 12:03:12,658 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 12:03:12,659 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 12:03:12,660 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 12:03:13,323 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 12:03:13,324 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4501 ms
2020-07-23 12:03:13,474 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 12:03:13,608 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 12:03:14,643 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:03:14,643 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:03:14,648 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:03:14,657 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:03:14,881 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 12:03:16,026 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 12:03:16,031 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 12:03:16,032 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 12:03:16,032 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 12:03:16,433 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 12:03:17,192 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 12:03:17,215 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 12:03:17,218 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 12:03:17,241 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 12:03:17,258 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 12:03:17,711 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 12:03:17,724 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 12:03:17,757 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 12:03:17,779 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 13.35 seconds (JVM running for 16.389)
2020-07-23 12:03:17,782 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:03:17,783 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:03:17,785 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:03:17,786 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:03:17,787 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:03:17,788 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:03:17,798 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:03:17,800 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:03:47,502 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:04:17,009 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:04:46,529 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:05:16,049 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:05:45,555 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:06:15,065 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:06:44,568 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:07:14,073 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:07:43,577 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:08:13,081 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:08:42,585 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:09:12,093 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:09:41,597 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:10:11,103 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:10:40,615 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:11:10,122 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:11:39,626 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:12:09,133 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:12:38,639 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:13:08,142 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:13:37,648 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:14:07,158 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:14:36,676 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:15:06,185 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:15:35,697 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:16:05,201 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:16:34,724 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:17:04,232 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:17:33,736 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:18:03,240 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:18:32,745 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:19:02,251 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:19:31,757 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:20:01,272 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:20:30,775 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:21:00,280 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:21:29,785 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:21:59,334 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:22:28,839 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:22:58,348 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:23:27,855 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:23:57,358 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:24:26,868 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:24:56,372 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:25:25,885 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:25:55,401 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:26:24,916 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:26:54,424 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:27:17,271 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 12:27:17,294 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 12:27:17,319 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 12:27:17,330 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 12:27:17,339 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 12:27:17,340 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 12:27:17,344 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 12:27:18,182 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:27:18,187 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 12:27:18,281 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 12:27:18,284 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 12:27:18,306 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-07-23 12:27:18,486 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 12:27:18,555 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 12:27:19,026 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 12:27:19,037 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 12:27:19,038 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 12:27:19,038 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 12:27:19,185 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 12:27:19,185 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1823 ms
2020-07-23 12:27:19,267 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 12:27:19,348 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 12:27:20,021 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:27:20,022 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:27:20,025 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 12:27:20,025 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 12:27:20,196 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 12:27:20,714 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 12:27:20,740 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 12:27:20,741 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 12:27:20,743 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 12:27:21,081 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 12:27:21,744 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 12:27:21,783 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 12:27:21,786 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 12:27:21,808 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 12:27:21,826 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 12:27:22,274 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 12:27:22,287 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 12:27:22,317 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 12:27:22,340 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 6.741 seconds (JVM running for 7.842)
2020-07-23 12:27:22,343 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:27:22,344 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:27:22,345 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:27:22,345 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:27:22,345 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 12:27:22,346 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 12:27:22,362 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:27:27,797 [http-nio-4001-exec-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-23 12:27:27,798 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-07-23 12:27:27,804 [http-nio-4001-exec-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 6 ms
2020-07-23 12:27:28,646 [http-nio-4001-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: hax-system-demo-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-23 12:27:28,658 [http-nio-4001-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: hax-system-demo-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-23 12:27:28,663 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-07-23 12:27:28,680 [http-nio-4001-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client hax-system-demo-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hax-system-demo-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@16b5787c
2020-07-23 12:27:28,706 [http-nio-4001-exec-1] ERROR [c.h.s.d.f.f.RemoteSysUserServiceFallbackFactory] RemoteSysUserServiceFallbackFactory.java:23 - feign 查询管理员用户列表失败:com.netflix.client.ClientException: Load balancer does not have available server for client: hax-system-demo-biz
2020-07-23 12:27:52,065 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:28:21,576 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:28:51,080 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:29:20,587 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:29:50,090 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:30:19,603 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:30:49,106 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:31:18,611 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:31:48,116 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:32:17,630 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:32:47,135 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:33:16,646 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:33:46,150 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:34:15,665 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:34:45,168 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:35:14,672 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:35:44,179 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:36:13,682 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:36:43,187 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:37:12,690 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:37:42,193 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:38:11,699 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:38:41,202 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:39:10,706 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:39:40,217 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:40:09,720 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:40:39,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:41:08,729 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:41:38,235 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:42:07,739 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:42:37,242 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:43:06,753 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:43:36,256 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:44:05,760 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:44:35,265 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:45:04,776 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:45:34,284 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:46:03,796 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:46:33,303 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:47:02,807 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:47:32,310 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:48:01,818 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:48:31,335 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:49:00,847 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:49:30,354 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:49:59,858 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:50:29,365 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:50:58,869 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:51:28,377 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:51:57,881 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:52:27,388 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:52:56,893 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:53:26,400 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:53:55,904 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:54:25,406 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:54:54,910 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:55:24,413 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:55:53,924 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:56:23,435 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:56:52,942 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:57:22,444 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:57:51,949 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:58:21,457 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 12:58:50,961 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:13:44,749 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:13:44,833 [com.alibaba.nacos.naming.beat.sender] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","weight":1.0}
2020-07-23 13:14:16,778 [main] INFO  [c.a.n.client.config.impl.LocalConfigInfoProcessor] LocalConfigInfoProcessor.java:195 - LOCAL_SNAPSHOT_PATH:C:\Users\hax\nacos\config
2020-07-23 13:14:16,837 [main] INFO  [com.alibaba.nacos.client.config.impl.Limiter] Limiter.java:53 - limitTime:5.0
2020-07-23 13:14:16,892 [main] INFO  [com.alibaba.nacos.client.config.utils.JVMUtil] JVMUtil.java:47 - isMultiInstance:false
2020-07-23 13:14:16,914 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz] & group[DEFAULT_GROUP]
2020-07-23 13:14:16,931 [main] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[hax-user-demo-biz-dev.yml] & group[DEFAULT_GROUP]
2020-07-23 13:14:16,933 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-hax-user-demo-biz,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-07-23 13:14:16,941 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-07-23 13:14:19,247 [main] WARN  [tk.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 13:14:19,261 [main] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] ClassPathMapperScanner.java:166 - No MyBatis mapper was found in '[com.hax.user.demo]' package. Please check your configuration.
2020-07-23 13:14:19,494 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-23 13:14:19,500 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-07-23 13:14:19,556 [main] INFO  [o.s.d.r.config.RepositoryConfigurationDelegate] RepositoryConfigurationDelegate.java:187 - Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2020-07-23 13:14:19,846 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0acb5fa8-2e5e-3b1a-b91b-b321c730c160
2020-07-23 13:14:19,937 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.hax.system.demo.feign.RemoteSysUserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-23 13:14:20,543 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:108 - Tomcat initialized with port(s): 4001 (http)
2020-07-23 13:14:20,554 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Initializing ProtocolHandler ["http-nio-4001"]
2020-07-23 13:14:20,555 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:173 - Starting service [Tomcat]
2020-07-23 13:14:20,556 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:173 - Starting Servlet engine: [Apache Tomcat/9.0.36]
2020-07-23 13:14:20,713 [main] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:173 - Initializing Spring embedded WebApplicationContext
2020-07-23 13:14:20,714 [main] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3696 ms
2020-07-23 13:14:20,810 [main] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-07-23 13:14:20,902 [main] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1002 - {dataSource-1} inited
2020-07-23 13:14:21,650 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 13:14:21,651 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 13:14:21,655 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-07-23 13:14:21,655 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-23 13:14:21,841 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-07-23 13:14:22,440 [main] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-07-23 13:14:22,445 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:56 - initializer namespace from System Property :null
2020-07-23 13:14:22,445 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:65 - initializer namespace from System Environment :null
2020-07-23 13:14:22,446 [main] INFO  [com.alibaba.nacos.client.naming] InitUtils.java:75 - initializer namespace from System Property :null
2020-07-23 13:14:22,814 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] PropertySourcedRequestMappingHandlerMapping.java:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-23 13:14:23,576 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:173 - Starting ProtocolHandler ["http-nio-4001"]
2020-07-23 13:14:23,603 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:220 - Tomcat started on port(s): 4001 (http) with context path ''
2020-07-23 13:14:23,607 [main] INFO  [com.alibaba.nacos.client.naming] BeatReactor.java:66 - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"172.17.197.177","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":4001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@hax-user-demo-biz","stopped":false,"weight":1.0} to beat map.
2020-07-23 13:14:23,633 [main] INFO  [com.alibaba.nacos.client.naming] NamingProxy.java:196 - [REGISTER-SERVICE] 44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45 registering service DEFAULT_GROUP@@hax-user-demo-biz with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"172.17.197.177","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":4001,"weight":1.0}
2020-07-23 13:14:23,641 [main] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP hax-user-demo-biz 172.17.197.177:4001 register finished
2020-07-23 13:14:24,124 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:160 - Context refreshed
2020-07-23 13:14:24,137 [main] INFO  [s.d.s.web.plugins.DocumentationPluginsBootstrapper] DocumentationPluginsBootstrapper.java:163 - Found 1 custom documentation plugin(s)
2020-07-23 13:14:24,184 [main] INFO  [s.d.spring.web.scanners.ApiListingReferenceScanner] ApiListingReferenceScanner.java:41 - Scanning for api listing references
2020-07-23 13:14:24,208 [main] INFO  [com.hax.user.demo.HaxUserDemoApplication] StartupInfoLogger.java:61 - Started HaxUserDemoApplication in 10.927 seconds (JVM running for 12.526)
2020-07-23 13:14:24,212 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz-dev.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 13:14:24,213 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz-dev.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 13:14:24,215 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz.yml+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 13:14:24,215 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz.yml, group=DEFAULT_GROUP, cnt=1
2020-07-23 13:14:24,215 [main] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:197 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [subscribe] hax-user-demo-biz+DEFAULT_GROUP+44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45
2020-07-23 13:14:24,215 [main] INFO  [com.alibaba.nacos.client.config.impl.CacheData] CacheData.java:92 - [fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] [add-listener] ok, tenant=44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45, dataId=hax-user-demo-biz, group=DEFAULT_GROUP, cnt=1
2020-07-23 13:14:24,221 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:14:53,921 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:15:23,426 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:15:52,930 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:16:22,433 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
2020-07-23 13:16:51,938 [com.alibaba.nacos.client.Worker.longPolling.fixed-localhost_8848-44b6c9a1-6e12-43fd-9821-e2ce9dd1bf45] INFO  [com.alibaba.nacos.client.config.impl.ClientWorker] ClientWorker.java:522 - get changedGroupKeys:[]
